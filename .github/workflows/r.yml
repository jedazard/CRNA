# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
#
# See https://github.com/r-lib/actions/tree/master/examples#readme for
# additional example workflows available for the R community.
name: R

on:
  # push:
  #   branches: [ "main" ]
  # pull_request:
  #   branches: [ "main" ]
  workflow_dispatch:

permissions:
  deployments: write
  contents: write
  statuses: write
  actions: write
  checks: read

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: ['ubuntu-latest', 'macos-latest', 'windows-latest']
        r-version: ['4.3.1']

    steps:
      - uses: actions/checkout@v3
      - name: Set up R ${{ matrix.r-version }}
        uses: r-lib/actions/setup-r@v2
        with:
          r-version: ${{ matrix.r-version }}
      - name: User credentials
        run: |
            git config --global user.email "jedazard@gmail.com"
            git config --global user.name "jedazard"

      - name: Install system dependencies
        run: sudo apt-get install -y libcurl4-openssl-dev
        if: matrix.os == 'ubuntu-latest'
        
      - name: Install dependencies
        run: |
          install.packages(c("remotes", "rcmdcheck"))
          remotes::install_deps(dependencies = TRUE)
        shell: Rscript {0}
      - name: Check
        run: rcmdcheck::rcmdcheck(args = "--no-manual", error_on = "error")
        shell: Rscript {0}

      - name: Tag the repository
        id: tag
        run: |
          # See https://docs.github.com/en/get-started/using-git/dealing-with-special-characters-in-branch-and-tag-names
          TAG=v$(date -Iseconds | sed 's/[T:\+]/-/g')
          echo "$TAG"
          echo "tag=$TAG" >> $GITHUB_OUTPUT
          git tag -a $TAG -m "Published version $TAG" ${GITHUB_SHA}
          git push origin $TAG
        if: matrix.os == 'ubuntu-latest'        
      - name: Cut a new release
        uses: softprops/action-gh-release@v1
        with:
          files: CRNA.zip
          tag_name: ${{ steps.tag.outputs.tag }}
        if: matrix.os == 'ubuntu-latest'
